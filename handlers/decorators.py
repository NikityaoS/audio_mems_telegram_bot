from aiogram.types import CallbackQuery, InlineQuery
from db.db_logic import get_callback_info_favorite_sound_list, get_dict_audios, brake_dict_for_8_items_list, \
    get_searched_audio_in_redis, get_all_audio_info, get_searched_audio_by_inline_query, \
    get_file_id_favour_audio_list_by_callbackinf


def check_get_favorite_audio_list_for_pagination(func):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    –ø—Ä–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ —Å–ø–∏—Å–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ.
    :param func:
    :return:
    """
    async def wrapper(callback: CallbackQuery):
        favorite_sound_list = await get_callback_info_favorite_sound_list(str(callback.message.chat.id))
        # –µ—Å–ª–∏ –≤ —Å–ø–∏—Å–∫–µ –Ω–µ—Ç –∞—É–¥–∏–æ, —Ç–æ –ø—Ä–∏ –µ–≥–æ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–∏—Å—ã–ª–∞–µ—Ç—Å—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫
        if not favorite_sound_list:
            await callback.message.delete_reply_markup()
            await callback.message.edit_text(text='üìã –°–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—É—Å—Ç! –î–æ–±–∞–≤—å—Ç–µ –∞—É–¥–∏–æ-—Å—Ç–∏–∫–µ—Ä –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!')
        else:
            favor_dct = await get_dict_audios(favorite_sound_list)
            pages_dict_favor_audio = await brake_dict_for_8_items_list(favor_dct)
            # –ø–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–æ–∫—É –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –ø–æ–¥—Å–ø–∏—Å–∫–∞ (—Å—Ç—Ä–∞–Ω–∏—Ü—ã) –≤ —Ñ–æ—Ä–º–∞—Ç–µ "3/10"
            str_pages = callback.message.reply_markup.inline_keyboard[-2][-2].text
            # –ø–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            previous_page = int(str_pages.split('/')[0])

            result = await func(callback, pages_dict_favor_audio, previous_page)
            return result
    return wrapper


def check_get_searched_audio_list_for_pagination(func):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    –ø—Ä–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ —Å–ø–∏—Å–∫–∞ –∞—É–¥–∏–æ, —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ –ø–æ–∏—Å–∫—É.
    :param func:
    :return:
    """
    async def wrapper(callback: CallbackQuery):
        searched_sound_list = get_searched_audio_in_redis(user_id=str(callback.message.chat.id),
                                                          searched_word=callback.message.text)
        # –µ—Å–ª–∏ –≤ —Å–ø–∏—Å–∫–µ –Ω–µ—Ç –∞—É–¥–∏–æ, —Ç–æ –ø—Ä–∏—Å—ã–ª–∞–µ—Ç—Å—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if not searched_sound_list:
            await callback.answer(text='‚åõ –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏—Å—Ç–µ–∫! –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É!', show_alert=True)
        else:
            searched_dct = await get_dict_audios(list(searched_sound_list))
            pages_dict_favor_audio = await brake_dict_for_8_items_list(searched_dct)
            # –ø–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–æ–∫—É –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –ø–æ–¥—Å–ø–∏—Å–∫–∞ (—Å—Ç—Ä–∞–Ω–∏—Ü—ã) –≤ —Ñ–æ—Ä–º–∞—Ç–µ "3/10"
            str_pages = callback.message.reply_markup.inline_keyboard[-1][-2].text
            # –ø–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            previous_page = int(str_pages.split('/')[0])

            result = await func(callback, pages_dict_favor_audio, previous_page)
            return result
    return wrapper


def check_content_of_inlinequery(func):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ InlineQuery-–æ–±—ä–µ–∫—Ç–∞. –ï—Å–ª–∏ None,
    —Ç–æ –∑–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞—É–¥–∏–æ, –µ—Å–ª–∏ * - –∑–∞–≥—Ä—É–∂–∞–µ—Ç
    —Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –∞—É–¥–∏–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –∫–∞–∫–æ–µ-–ª–∏–±–æ
    –¥—Ä—É–≥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - –∏—â–µ—Ç –∞—É–¥–∏–æ —Å —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
    –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –∞—É–¥–∏–æ.
    :param func:
    :return:
    """
    async def wrapper(inline_query: InlineQuery):
        audio_lst = await get_all_audio_info()

        if not inline_query.query:
            result = await func(inline_query, audio_lst)
            return result
        elif inline_query.query == '*':
            favour_audio_lst = await get_file_id_favour_audio_list_by_callbackinf(str(inline_query.from_user.id))
            result = await func(inline_query, favour_audio_lst)
            return result
        else:
            audio_lst = await get_searched_audio_by_inline_query(inline_query.query, audio_lst)
            if audio_lst:
                result = await func(inline_query, audio_lst)
                return result
    return wrapper

