import datetime

from aiogram.exceptions import TelegramBadRequest
from aiogram.types import Message, CallbackQuery
from keyboards.keyboards import SoundsCallbackFactory




def check_subscrib_to_channel_1param(func):
    """
    –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–π —Å 2 –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø–æ–¥–ø–∏—Å–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –∫–∞–Ω–∞–ª,
    –µ—Å–ª–∏ –Ω–µ—Ç, —Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–¥–ø–∏—Å–∫–µ.
    :param func:
    :return:
    """
    async def wrapper(update):
        try:
            from main import bot
            await bot.get_chat_member(chat_id=-1001992217206, user_id=806012412)
        except TelegramBadRequest:
            if isinstance(update, Message):
                await update.answer(text='üì¢ –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª: CHANEL!!!!')
            else:
                await update.message.answer(text='üì¢ –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª: CHANEL!!!!')
                await update.answer()
        else:
            result = await func(update)
            return result
    return wrapper


def check_subscrib_to_channel_2param(func):
    """
    –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–π —Å 2 –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø–æ–¥–ø–∏—Å–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –∫–∞–Ω–∞–ª,
    –µ—Å–ª–∏ –Ω–µ—Ç, —Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–¥–ø–∏—Å–∫–µ.
    :param func:
    :return:
    """
    async def wrapper(callback: CallbackQuery, callback_data: SoundsCallbackFactory):
        try:
            from main import bot
            await bot.get_chat_member(chat_id=-1001992217206, user_id=806012412)
        except TelegramBadRequest:
            await callback.message.answer(text='üì¢ –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª: CHANEL!!!!')
            await callback.answer()
        else:
            result = await func(callback, callback_data)
            return result
    return wrapper


def check_date_pagination_btn_2param(func):
    async def wrapper(callback: CallbackQuery,
                      callback_data: SoundsCallbackFactory):
        if callback.message.date.date() != datetime.datetime.now().date():
            await callback.answer('‚åõ –°–ø–∏—Å–∫–æ–∫ —É—Å—Ç–∞—Ä–µ–ª, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É!', show_alert=True)
        else:
            result = await func(callback, callback_data)
            return result
    return wrapper

