from aiogram import Router, F
from aiogram.types import CallbackQuery, Message
from handlers.decorators import check_get_searched_audio_list_for_pagination
from keyboards.keyboards import inline_pagination_searched_soundlist_keyboard_build, \
    SearchedSoundsPaginationCallbackFactory
from db_logic import get_dict_audios, brake_dict_for_8_items_list, get_callback_info_searched_audio_list, \
    set_searched_audio_in_redis

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä —É—Ä–æ–≤–Ω—è –º–æ–¥—É–ª—è
router: Router = Router()


@router.message(~F.text.in_({'üîä –í—Å–µ –∞—É–¥–∏–æ-—Å—Ç–∏–∫–µ—Ä—ã', '‚≠ê –ò–∑–±—Ä–∞–Ω–Ω–æ–µ', 'üì© –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å'}))
async def show_searched_sounds_list(message: Message):
    """
    –í—ã–≤–æ–¥–∏—Ç –º–µ–Ω—é-—Å–ø–∏—Å–æ–∫ —Å –Ω–∞–π–¥–µ–Ω–Ω—ã–º–∏ –ø–æ –ø–æ–∏—Å–∫—É –∞—É–¥–∏–æ
    :param message: Message
    :return:
    """
    searched_sound_list = await get_callback_info_searched_audio_list(message.text)

    if not searched_sound_list:
        await message.answer(text='üòî –ê—É–¥–∏–æ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!')
    else:
        searched_dct = await get_dict_audios(searched_sound_list)
        pages_dict_searched_audio = await brake_dict_for_8_items_list(searched_dct)

        set_searched_audio_in_redis(user_id=str(message.chat.id),
                                    searched_word=message.text,
                                    searched_audio_list=searched_sound_list)

        markup = await inline_pagination_searched_soundlist_keyboard_build(
            buttons_dict_list=pages_dict_searched_audio,
            index=0,
            searched_word=message.text,
            user_id=str(message.chat.id)
        )
        await message.answer(text=f'{message.text}',
                             reply_markup=markup)


@router.callback_query(SearchedSoundsPaginationCallbackFactory.filter(F.direction == 'forward'))
@check_get_searched_audio_list_for_pagination
async def get_next_page_searched_sound_list(callback: CallbackQuery,
                                            pages_dict_favor_audio: list[dict],
                                            previous_page: int):
    """
    –í—ã–≤–æ–¥–∏—Ç —Å–ª–µ–¥—É—é—â–∏–π —Å–ø–∏—Å–æ–∫ (—Å—Ç—Ä–∞–Ω–∏—Ü—É) —Å –Ω–∞–π–¥–µ–Ω–Ω—ã–º–∏ –ø–æ –ø–æ–∏—Å–∫—É –∞—É–¥–∏–æ
    :param callback: CallbackQuery
    :return:
    """

    # –µ—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü –±–æ–ª—å—à–µ –Ω–æ–º–µ—Ä–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã,
    # —Ç–æ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    if len(pages_dict_favor_audio) > previous_page:
        await callback.message.edit_reply_markup(
            reply_markup=await inline_pagination_searched_soundlist_keyboard_build(
                buttons_dict_list=pages_dict_favor_audio,
                # –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã = –∏–Ω–¥–µ–∫—Å + 1
                # –∏–Ω–¥–µ–∫—Å–æ–º —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä —è–≤–ª—è–µ—Ç—Å—è –Ω–æ–º–µ—Ä –ø—Ä–µ–¥—ã–¥—É—â–µ–π
                index=previous_page,
                searched_word=callback.message.text,
                user_id=str(callback.message.chat.id)
            )
        )
    elif len(pages_dict_favor_audio) == 1:
        await callback.answer()
    else:
        # –µ—Å–ª–∏ –∫–æ–ª–∏—á–µ—Ç—Å–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü —Ä–∞–≤–Ω–æ –Ω–æ–º–µ—Ä—É –ø—Ä–µ–¥—ã–¥—É—â–µ–π, —Ç–æ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –Ω–∞—á–∞–ª–æ
        # —Ç.–µ. –∫ 0 –∏–Ω–¥–µ–∫—Å—É —Å–ø–∏—Å–∫–∞ (—Å—Ç—Ä–∞–Ω–∏—Ü–µ 1)
        await callback.message.edit_reply_markup(
            reply_markup=await inline_pagination_searched_soundlist_keyboard_build(
                buttons_dict_list=pages_dict_favor_audio,
                index=0,
                searched_word=callback.message.text,
                user_id=str(callback.message.chat.id)
            )
        )


@router.callback_query(SearchedSoundsPaginationCallbackFactory.filter(F.direction == 'back'))
@check_get_searched_audio_list_for_pagination
async def get_previous_page_searched_sound_list(callback: CallbackQuery,
                                                pages_dict_favor_audio: list[dict],
                                                previous_page: int):
    """
    –í—ã–≤–æ–¥–∏—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Å–ø–∏—Å–æ–∫ (—Å—Ç—Ä–∞–Ω–∏—Ü—É) —Å –Ω–∞–π–¥–µ–Ω–Ω—ã–º–∏ –ø–æ –ø–æ–∏—Å–∫—É –∞—É–¥–∏–æ
    :param callback: CallbackQuery
    :return:
    """

    # –µ—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü –±–æ–ª—å—à–µ –Ω–æ–º–µ—Ä–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã,
    # —Ç–æ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    if previous_page > 1:
        await callback.message.edit_reply_markup(
            reply_markup=await inline_pagination_searched_soundlist_keyboard_build(
                buttons_dict_list=pages_dict_favor_audio,
                # –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã = –∏–Ω–¥–µ–∫—Å + 1
                # –∏–Ω–¥–µ–∫—Å–æ–º —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä —è–≤–ª—è–µ—Ç—Å—è –Ω–æ–º–µ—Ä –ø—Ä–µ–¥—ã–¥—É—â–µ–π
                index=previous_page - 2,
                searched_word=callback.message.text,
                user_id=str(callback.message.chat.id)
            )
        )
    elif len(pages_dict_favor_audio) == 1:
        await callback.answer()
    else:
        # –µ—Å–ª–∏ –∫–æ–ª–∏—á–µ—Ç—Å–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü —Ä–∞–≤–Ω–æ –Ω–æ–º–µ—Ä—É –ø—Ä–µ–¥—ã–¥—É—â–µ–π, —Ç–æ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –Ω–∞—á–∞–ª–æ
        # —Ç.–µ. –∫ 0 –∏–Ω–¥–µ–∫—Å—É —Å–ø–∏—Å–∫–∞ (—Å—Ç—Ä–∞–Ω–∏—Ü–µ 1)
        await callback.message.edit_reply_markup(
            reply_markup=await inline_pagination_searched_soundlist_keyboard_build(
                buttons_dict_list=pages_dict_favor_audio,
                index=len(pages_dict_favor_audio) - 1,
                searched_word=callback.message.text,
                user_id=str(callback.message.chat.id)
            )
        )
